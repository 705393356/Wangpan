<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<context:component-scan base-package="com.hcw.service" />
	<context:component-scan base-package="com.hcw.dao" />
	<context:annotation-config />


	<!-- 1. 数据源 : DriverManagerDataSource -->
	<bean id="datasource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://10.21.71.114:3306/wp" />
		<property name="username" value="root" />
		<property name="password" value="cscwroot" />
	</bean>

	<!--2. mybatis的SqlSession的工厂: SqlSessionFactoryBean dataSource ： 引用数据源 typeAliasesPackage 
		： 指定实体类的包名，自动将实体类的简单类名映射为别名 -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="datasource" />
		<property name="typeAliasesPackage" value="com.hcw.model" />
	</bean>

	<!-- 3. mybatis自动扫描加载Sql映射文件 : MapperScannerConfigurer sqlSessionFactory 
		： 引用上面定义的sessionFactory basePackage ： 指定Sql映射文件/接口所在的包（自动扫描）即原来的Mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.hcw.dao" />
		<property name="sqlSessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 4. 事务管理 : DataSourceTransactionManager dataSource : 引用上面定义的数据源 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="datasource" />
	</bean>
	<!-- 5. 使用声明式事务 transaction-manage ： 引用上面定义的事务管理器 -->
	<tx:annotation-driven transaction-manager="txManager" />


</beans>